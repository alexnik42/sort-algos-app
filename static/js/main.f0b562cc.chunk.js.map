{"version":3,"sources":["components/Nav.js","components/Footer.js","utils/utils.js","algorithms/bubble_sort.js","algorithms/insertion_sort.js","algorithms/merge_sort.js","components/Array.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","handleNewArray","setArray","arr","bubbleSort","insertionSort","mergeSort","React","useState","size","setSize","speed","setSpeed","className","onClick","type","min","max","step","value","onInput","e","target","length","Footer","delay","delayTime","a","timer","ms","Promise","res","setTimeout","i","j","isCurrent","val","isFinalPosition","key","start","end","mergeSortHelper","merge","mid","old_start","old_mid","push","Math","floor","Array","generateArray","ceil","random","useEffect","new_arr","style","gridTemplateColumns","map","index","item","height","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0b562cc.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./Nav.css\";\n\nfunction Nav({\n  handleNewArray,\n  setArray,\n  arr,\n  bubbleSort,\n  insertionSort,\n  mergeSort,\n}) {\n  const [size, setSize] = React.useState(100);\n  const [speed, setSpeed] = React.useState(40);\n\n  function handleArraySize(e) {\n    handleNewArray(e.target.value);\n    setSize(e.target.value);\n  }\n\n  function handleSortingSpeed(e) {\n    setSpeed(e.target.value);\n  }\n\n  return (\n    <div className=\"nav-container\">\n      <div className=\"nav-array\">\n        <button className=\"btn_sort\" onClick={() => handleNewArray(size)}>\n          Generate new array\n        </button>\n        <form>\n          <label className=\"sort_label\">Array's size</label>\n          <input\n            className=\"sort_slider\"\n            type=\"range\"\n            min=\"5\"\n            max=\"200\"\n            step=\"5\"\n            value={size}\n            onInput={handleArraySize}\n          ></input>\n          <label className=\"sort_label\">Sorting speed</label>\n          <input\n            className=\"sort_slider\"\n            type=\"range\"\n            min=\"10\"\n            max=\"70\"\n            step=\"1\"\n            value={speed}\n            onInput={handleSortingSpeed}\n          ></input>\n        </form>\n      </div>\n      <div className=\"nav_sort_algos\">\n        <button\n          className=\"btn_sort\"\n          onClick={() => bubbleSort(arr, setArray, speed)}\n        >\n          BubbleSort it!\n        </button>\n        <button\n          className=\"btn_sort\"\n          onClick={() => insertionSort(arr, setArray, speed)}\n        >\n          InsertionSort it!\n        </button>\n        <button\n          className=\"btn_sort\"\n          onClick={() => mergeSort(arr, setArray, 0, arr.length - 1, speed)}\n        >\n          MergeSort it!\n        </button>\n        <button className=\"btn_sort\">QuickSort it!</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\nimport \"./Footer.css\";\n\nfunction Footer() {\n  return <p className=\"footer_author\">&copy; Alexander Nikolaev, 2020</p>;\n}\n\nexport default Footer;\n","const MAX_DELAY = 60;\n\nexport async function delay(delayTime) {\n  const timer = (ms) => new Promise((res) => setTimeout(res, ms));\n  await timer(MAX_DELAY - delayTime);\n}\n","import { delay } from \"../utils/utils\";\n\nexport async function bubbleSort(arr, setArray, delayTime) {\n  for (let i = 0; i < arr.length; i++) {\n    for (let j = 0; j < arr.length - i - 1; j++) {\n      await delay(delayTime);\n      arr[j].isCurrent = true;\n      if (arr[j].val > arr[j + 1].val) {\n        [arr[j], arr[j + 1]] = [arr[j + 1], arr[j]];\n      }\n      arr[j].isCurrent = false;\n      setArray([...arr]);\n    }\n    arr[arr.length - i - 1].isFinalPosition = true;\n  }\n  setArray([...arr]);\n}\n","import { delay } from \"../utils/utils\";\n\nexport async function insertionSort(arr, setArray, delayTime) {\n  for (let i = 0; i < arr.length; i++) {\n    let j = i - 1;\n    let key = arr[i];\n    while (j >= 0 && arr[j].val > key.val) {\n      await delay(delayTime);\n      arr[j + 1] = arr[j];\n      j--;\n      setArray([...arr]);\n    }\n    arr[j + 1] = key;\n    setArray([...arr]);\n  }\n\n  for (let i = 0; i < arr.length; i++) {\n    await delay(delayTime);\n    arr[i].isFinalPosition = true;\n    setArray([...arr]);\n  }\n}\n","import { delay } from \"../utils/utils\";\n\nexport async function mergeSort(arr, setArray, start, end, delayTime) {\n  await mergeSortHelper(arr, setArray, start, end);\n  for (let i = 0; i < arr.length; i++) {\n    await delay(delayTime);\n    arr[i].isFinalPosition = true;\n    setArray([...arr]);\n  }\n}\n\nasync function mergeSortHelper(arr, setArray, start, end, delayTime) {\n  async function merge(arr, start, mid, end, setArray) {\n    const res = [];\n    let old_start = start;\n    let old_mid = mid;\n    mid++;\n\n    while (start <= old_mid && mid <= end) {\n      if (arr[start].val <= arr[mid].val) {\n        res.push(arr[start]);\n        start++;\n      } else {\n        res.push(arr[mid]);\n        mid++;\n      }\n    }\n\n    while (start <= old_mid) {\n      res.push(arr[start]);\n      start++;\n    }\n\n    while (mid <= end) {\n      res.push(arr[mid]);\n      mid++;\n    }\n\n    for (let i = old_start; i <= end; i++) {\n      await delay(10000)\n      arr[i] = res[i - old_start];\n      await setArray([...arr]);\n    }\n  }\n\n  if (start >= end) {\n    return;\n  }\n\n  let mid = Math.floor((start + end) / 2);\n  await mergeSortHelper(arr, setArray, start, mid, delayTime);\n  await mergeSortHelper(arr, setArray, mid + 1, end, delayTime);\n\n  await merge(arr, start, mid, end, setArray);\n  await setArray([...arr]);\n}\n","import React from \"react\";\nimport Nav from \"./Nav\";\nimport Footer from \"./Footer\";\n\nimport { bubbleSort } from \"../algorithms/bubble_sort\";\nimport { insertionSort } from \"../algorithms/insertion_sort\";\nimport { mergeSort } from \"../algorithms/merge_sort\";\n\nimport \"./Array.css\";\n\nconst DEFAULT_SIZE = 100;\n\nfunction Array() {\n  const [arr, setArray] = React.useState([]);\n\n  function generateArray(size) {\n    const arr = [];\n    for (let i = 0; i < size; i++) {\n      arr.push({\n        val: Math.ceil(Math.random() * 300),\n        isCurrent: false,\n        isFinalPosition: false,\n      });\n    }\n    return arr;\n  }\n\n  function handleNewArray(size) {\n    const new_arr = generateArray(size);\n    setArray(new_arr);\n  }\n\n  React.useEffect(() => {\n    setArray(generateArray(DEFAULT_SIZE));\n  }, []);\n\n  function visualizeItem(item, key) {\n    return (\n      <div\n        className={`array_col ${item.isCurrent ? \"current\" : \"\"} ${\n          item.isFinalPosition ? \"final\" : \"\"\n        }`}\n        key={key}\n        style={{ height: item.val }}\n      ></div>\n    );\n  }\n\n  return (\n    <>\n      <Nav\n        handleNewArray={handleNewArray}\n        setArray={setArray}\n        arr={arr}\n        bubbleSort={bubbleSort}\n        insertionSort={insertionSort}\n        mergeSort={mergeSort}\n      ></Nav>\n      <div\n        className=\"array\"\n        style={{ gridTemplateColumns: `repeat(${arr.length}, 1fr)` }}\n      >\n        {arr.map((e, index) => {\n          return visualizeItem(e, index);\n        })}\n      </div>\n      <Footer></Footer>\n    </>\n  );\n}\n\nexport default Array;\n","import React from \"react\";\nimport Array from \"./components/Array\";\n\nfunction App() {\n  return (\n    <div>\n      <Array></Array>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}