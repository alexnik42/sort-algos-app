{"version":3,"sources":["utils/constants.js","utils/utils.js","components/Array/Array.js","utils/customHooks.js","components/Array/ArrayContainer.js","redux/types/types.js","redux/actions/actions.js","algorithms/bubbleSort.js","algorithms/insertionSort.js","algorithms/mergeSort.js","algorithms/quickSort.js","components/Toolbar/Toolbar.js","components/Toolbar/ToolbarContainer.js","components/Footer/Footer.js","components/App/App.js","redux/reducers/arrayReducer/arrayReducer.js","redux/reducers/speedReducer/speedReducer.js","redux/reducers/rootReducer.js","index.js"],"names":["DEFAULT_RANGE_MAX","delay","delayTime","callback","a","timer","ms","Promise","res","setTimeout","handleDispatch","dispatch","action","arr","slice","getRandomIntInclusive","min","max","Math","ceil","floor","random","Array","length","windowWidth","array","numMargin","window","innerWidth","numWidth","color","numFontSize","getNumFontSize","colWidth","React","useState","width","setWidth","innerHeight","height","setHeight","updateWidthAndHeight","useEffect","addEventListener","removeEventListener","useWindowDimensions","className","style","gridTemplateColumns","gap","map","element","index","status","val","fontSize","connect","state","arrayProperties","GENERATE_NEW_ARRAY","CHANGE_ARRAY_SIZE","SET_NEW_ARRAY","SET_SORTING_ACTIVE","SET_SORTING_INACTIVE","CHANGE_SORTING_SPEED","setNewArray","type","payload","bubbleSort","speed","i","j","insertionSort","merge","start","mid","end","auxiliaryRes","k","m","target","JSON","parse","stringify","push","concat","auxTarget","prevState","doMergeSort","mergeSort","quickSort","doQuickSort","randIndex","pivot","pivotCurrentIndex","valueToSwap","splice","Toolbar","size","isSortRunning","generateNewArray","setSortingActive","setSortingInActive","changeArraySize","changeSortingSpeed","sortingProperties","setSortingProperties","handleInputChange","event","prev","name","value","handleButtonClick","sortingAlgorithm","disabled","onClick","step","onChange","speedProperties","Footer","App","ToolbarContainer","ArrayContainer","initialState","from","combineReducers","composedEnhancer","composeWithDevTools","trace","store","createStore","rootReducer","applyMiddleware","thunk","app","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73877d29.chunk.js","sourcesContent":["export const DEFAULT_SIZE = 50;\nexport const DEFAULT_RANGE_MIN = 10;\nexport const DEFAULT_RANGE_MAX = 200;\nexport const DEFAULT_SPEED = 40;\nexport const HEIGHT_MULTIPLIER = 2.5;\nexport const WIDTH_MULTIPLIER = 1.5;","export async function delay(delayTime, callback) {\n  const timer = (ms) => new Promise((res) => setTimeout(res, ms));\n  await timer(1000 / delayTime);\n  callback();\n}\n\nexport function handleDispatch(dispatch, action, arr) {\n  dispatch(action(arr.slice()));\n}\n\nexport function getRandomIntInclusive(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport function getNumWidth(length, windowWidth) {\n  if (windowWidth < 950 && windowWidth >= 650) {\n    return 2;\n  } else if (windowWidth < 650) {\n    return 1;\n  } else {\n    return length < 5\n      ? 16\n      : length < 8\n      ? 14\n      : length < 11\n      ? 12\n      : length < 20\n      ? 10\n      : length < 50\n      ? 6\n      : length < 75\n      ? 4\n      : 2;\n  }\n}\n\nexport function getNumFontSize(numWidth) {\n  return numWidth > 70\n    ? 20\n    : numWidth > 60\n    ? 18\n    : numWidth > 50\n    ? 16\n    : numWidth > 40\n    ? 14\n    : numWidth > 30\n    ? 12\n    : numWidth > 20\n    ? 10\n    : 8;\n}\n","import React from \"react\";\nimport { HEIGHT_MULTIPLIER, WIDTH_MULTIPLIER } from \"utils/constants\";\nimport { getNumFontSize, getNumWidth } from \"utils/utils\";\nimport { useWindowDimensions } from \"utils/customHooks\";\nimport \"./Array.css\";\n\nfunction Array({ array }) {\n  const numMargin = getNumWidth(array.length, window.innerWidth);\n  const numWidth =\n  (window.innerWidth - 2 * numMargin * array.length) / array.length;\n  const color = numWidth > 20 ? \"white\" : \"transparent\";\n  const numFontSize = getNumFontSize(numWidth);\n  const colWidth = window.innerWidth / (array.length * WIDTH_MULTIPLIER);\n  \n  useWindowDimensions();\n\n  return (\n    <div className=\"arrayContainer\">\n      <div\n        className=\"arrayBody\"\n        style={{\n          gridTemplateColumns: `repeat(${array.length}, ${colWidth}px)`,\n          gap: numMargin,\n        }}\n      >\n        {array.map((element, index) => {\n          return (\n            <div\n              className={`arrayColumn ${element.status}`}\n              key={index}\n              style={{\n                height: element.val * HEIGHT_MULTIPLIER,\n                color: color,\n                fontSize: `${numFontSize}px`,\n              }}\n            >\n              {element.val}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Array;\n","import React from \"react\";\n\nexport function useWindowDimensions() {\n  const [width, setWidth] = React.useState(window.innerWidth);\n  const [height, setHeight] = React.useState(window.innerHeight);\n\n  const updateWidthAndHeight = () => {\n    setWidth(window.innerWidth);\n    setHeight(window.innerHeight);\n  };\n\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", updateWidthAndHeight);\n    return () => window.removeEventListener(\"resize\", updateWidthAndHeight);\n  });\n\n  return {\n    width,\n    height,\n  };\n}\n","import { connect } from \"react-redux\";\nimport Array from \"./Array\";\n\nconst mapStateToProps = (state) => {\n  return {\n    array: state.arrayProperties.array,\n  };\n};\n\nexport default connect(mapStateToProps, null)(Array);\n","export const GENERATE_NEW_ARRAY = \"ARRAY/GENERATE_NEW_ARRAY\";\nexport const CHANGE_ARRAY_SIZE = \"ARRAY/CHANGE_ARRAY_SIZE\";\nexport const SET_NEW_ARRAY = \"ARRAY/SET_NEW_ARRAY\";\nexport const SET_SORTING_ACTIVE = \"ARRAY/SET_SORTING_ACTIVE\";\nexport const SET_SORTING_INACTIVE = \"ARRAY/SET_SORTING_INACTIVE\";\n\nexport const CHANGE_SORTING_SPEED = \"SPEED/CHANGE_SORTING_SPEED\";\n","import {\n  CHANGE_ARRAY_SIZE,\n  CHANGE_SORTING_SPEED,\n  GENERATE_NEW_ARRAY,\n  SET_NEW_ARRAY,\n  SET_SORTING_ACTIVE,\n  SET_SORTING_INACTIVE\n} from \"redux/types/types\";\n\nexport function generateNewArray(size) {\n  return {\n    type: GENERATE_NEW_ARRAY,\n    payload: size,\n  };\n}\n\nexport function setNewArray(array) {\n  return {\n    type: SET_NEW_ARRAY,\n    payload: array,\n  };\n}\n\nexport function changeArraySize(size) {\n  return {\n    type: CHANGE_ARRAY_SIZE,\n    payload: size,\n  };\n}\n\nexport function changeSortingSpeed(speed) {\n  return {\n    type: CHANGE_SORTING_SPEED,\n    payload: speed,\n  };\n}\n\nexport function setSortingActive() {\n  return {\n    type: SET_SORTING_ACTIVE,\n  };\n}\n\nexport function setSortingInActive() {\n  return {\n    type: SET_SORTING_INACTIVE,\n  };\n}","import { delay, handleDispatch } from \"../utils/utils\";\nimport { setNewArray } from \"redux/actions/actions\";\n\nexport async function bubbleSort(dispatch, array, speed) {\n  const arr = array.slice();\n  for (let i = 0; i < arr.length; i++) {\n    for (let j = 0; j < arr.length - i - 1; j++) {\n      arr[j].status = \"columnCorrectPosition\";\n      arr[j + 1].status = \"columnCorrectPosition\";\n      await delay(speed, () => handleDispatch(dispatch, setNewArray, arr));\n      if (arr[j].val > arr[j + 1].val) {\n        arr[j].status = \"columnWrongPosition\";\n        arr[j + 1].status = \"columnWrongPosition\";\n        await delay(speed, () => handleDispatch(dispatch, setNewArray, arr));\n        [arr[j], arr[j + 1]] = [arr[j + 1], arr[j]];\n        arr[j].status = \"columnCorrectPosition\";\n        arr[j + 1].status = \"columnCorrectPosition\";\n        await delay(speed, () => handleDispatch(dispatch, setNewArray, arr));\n      }\n      arr[j].status = \"columnNotSorted\";\n      arr[j + 1].status = \"columnNotSorted\";\n      await delay(speed, () => handleDispatch(dispatch, setNewArray, arr));\n    }\n    arr[arr.length - 1 - i].status = \"columnIsSorted\";\n  }\n  await delay(speed, () => handleDispatch(dispatch, setNewArray, arr));\n}\n","import { delay, handleDispatch } from \"../utils/utils\";\nimport { setNewArray } from \"redux/actions/actions\";\n\nexport async function insertionSort(dispatch, array, speed) {\n  const arr = array.slice();\n  for (let i = 0; i < arr.length; i++) {\n    let j = i;\n    if (j > 0) {\n      arr[j].status = \"columnCorrectPosition\";\n      arr[j - 1].status = \"columnCorrectPosition\";\n      await delay(speed, () => handleDispatch(dispatch, setNewArray, arr));\n    }\n    while (j > 0 && arr[j].val < arr[j - 1].val) {\n      arr[j].status = \"columnWrongPosition\";\n      arr[j - 1].status = \"columnWrongPosition\";\n      await delay(speed, () => handleDispatch(dispatch, setNewArray, arr));\n      [arr[j], arr[j - 1]] = [arr[j - 1], arr[j]];\n      arr[j].status = \"columnCorrectPosition\";\n      arr[j - 1].status = \"columnCorrectPosition\";\n      await delay(speed, () => handleDispatch(dispatch, setNewArray, arr));\n      arr[j].status = \"columnNotSorted\";\n      arr[j - 1].status = \"columnNotSorted\";\n      j--;\n      await delay(speed, () => handleDispatch(dispatch, setNewArray, arr));\n    }\n    if (j > 0) {\n      arr[j].status = \"columnCorrectPosition\";\n      arr[j - 1].status = \"columnCorrectPosition\";\n      await delay(speed, () => handleDispatch(dispatch, setNewArray, arr));\n      arr[j].status = \"columnNotSorted\";\n      arr[j - 1].status = \"columnNotSorted\";\n      await delay(speed, () => handleDispatch(dispatch, setNewArray, arr));\n    }\n  }\n  await delay(speed, () => handleDispatch(dispatch, setNewArray, arr));\n\n  for (let i = arr.length - 1; i >= 0; i--) {\n    arr[i].status = \"columnIsSorted\";\n    await delay(speed, () => handleDispatch(dispatch, setNewArray, arr));\n  }\n}\n","import { delay, handleDispatch } from \"../utils/utils\";\nimport { setNewArray } from \"redux/actions/actions\";\n\nasync function merge(arr, start, mid, end, dispatch, speed) {\n  const res = [];\n  const auxiliaryRes = [];\n\n  let k = start;\n  let m = mid + 1;\n\n  while (k <= mid && m <= end) {\n    const target = JSON.parse(JSON.stringify(arr));\n    if (arr[k].val <= arr[m].val) {\n      target[k].status = \"columnCorrectPosition\";\n      target[m].status = \"columnCorrectPosition\";\n      auxiliaryRes.push(\n        res.concat(target.slice(k, mid + 1).concat(target.slice(m, end + 1)))\n      );\n      res.push(arr[k++]);\n    } else {\n      target[k].status = \"columnWrongPosition\";\n      target[m].status = \"columnWrongPosition\";\n      auxiliaryRes.push(\n        res.concat(target.slice(k, mid + 1).concat(target.slice(m, end + 1)))\n      );\n\n      const auxTarget = JSON.parse(JSON.stringify(arr));\n      auxTarget[k].status = \"columnCorrectPosition\";\n\n      res.push(arr[m++]);\n\n      const prevState = JSON.parse(JSON.stringify(res));\n      prevState[prevState.length - 1].status = \"columnCorrectPosition\";\n      auxiliaryRes.push(\n        prevState.concat(\n          auxTarget.slice(k, mid + 1).concat(auxTarget.slice(m, end + 1))\n        )\n      );\n    }\n    if (end - start + 1 === arr.length) {\n      res[res.length - 1].status = \"columnIsSorted\";\n    }\n  }\n\n  while (k <= mid) {\n    res.push(arr[k++]);\n    if (end - start + 1 === arr.length) {\n      res[res.length - 1].status = \"columnIsSorted\";\n    }\n    auxiliaryRes.push(\n      res.concat([...arr].slice(k, mid + 1).concat([...arr].slice(m, end + 1)))\n    );\n  }\n\n  while (m <= end) {\n    res.push(arr[m++]);\n    if (end - start + 1 === arr.length) {\n      res[res.length - 1].status = \"columnIsSorted\";\n    }\n    auxiliaryRes.push(\n      res.concat([...arr].slice(k, mid + 1).concat([...arr].slice(m, end + 1)))\n    );\n  }\n\n  for (let i = 0; i < auxiliaryRes.length; i++) {\n    for (let j = start; j <= end; j++) {\n      arr[j] = auxiliaryRes[i][j - start];\n    }\n    await delay(speed, () => handleDispatch(dispatch, setNewArray, arr));\n  }\n}\n\nasync function doMergeSort(dispatch, array, start, end, speed) {\n  if (start === end) {\n    return;\n  }\n  let mid = Math.floor((start + end) / 2);\n  await doMergeSort(dispatch, array, start, mid, speed);\n  await doMergeSort(dispatch, array, mid + 1, end, speed);\n  await merge(array, start, mid, end, dispatch, speed);\n}\n\nexport async function mergeSort(dispatch, array, speed) {\n  await doMergeSort(dispatch, array, 0, array.length - 1, speed);\n}\n","import { delay, handleDispatch } from \"../utils/utils\";\nimport { setNewArray } from \"redux/actions/actions\";\n\nexport async function quickSort(dispatch, array, speed) {\n  const auxiliaryRes = [];\n  doQuickSort(array, 0, array.length - 1, auxiliaryRes);\n  auxiliaryRes.push(JSON.parse(JSON.stringify(array)));\n  for (let i = 0; i < auxiliaryRes.length; i++) {\n    await delay(speed, () =>\n      handleDispatch(dispatch, setNewArray, auxiliaryRes[i])\n    );\n  }\n}\n\nfunction doQuickSort(array, start, end, auxiliaryRes) {\n  if (start >= end) {\n    array[Math.max(Math.min(start, end), 0)].status = \"columnIsSorted\";\n    return;\n  }\n\n  let min = start;\n  let max = end;\n\n  let randIndex = Math.floor(min + Math.random() * (max + 1 - min));\n  let pivot = array[randIndex].val;\n  array[randIndex].status = \"columnIsPivot\";\n  auxiliaryRes.push(JSON.parse(JSON.stringify(array)));\n\n  let pivotCurrentIndex = start;\n  [array[start], array[randIndex]] = [array[randIndex], array[start]];\n  auxiliaryRes.push(JSON.parse(JSON.stringify(array)));\n\n  for (let i = start + 1; i <= end; i++) {\n    array[i].status = \"columnCorrectPosition\";\n    auxiliaryRes.push(JSON.parse(JSON.stringify(array)));\n    if (pivot <= array[i].val) {\n      array[i].status = \"columnNotSorted\";\n    } else {\n      array[i].status = \"columnWrongPosition\";\n      auxiliaryRes.push(JSON.parse(JSON.stringify(array)));\n\n      const valueToSwap = JSON.parse(JSON.stringify(array[i]));\n      array.splice(i, 1);\n      array.splice(pivotCurrentIndex++, 0, valueToSwap);\n      array[pivotCurrentIndex - 1].status = \"columnCorrectPosition\";\n      auxiliaryRes.push(JSON.parse(JSON.stringify(array)));\n\n      array[pivotCurrentIndex - 1].status = \"columnNotSorted\";\n    }\n    auxiliaryRes.push(JSON.parse(JSON.stringify(array)));\n  }\n\n  array[pivotCurrentIndex].status = \"columnIsSorted\";\n  auxiliaryRes.push(JSON.parse(JSON.stringify(array)));\n\n  doQuickSort(array, start, pivotCurrentIndex - 1, auxiliaryRes);\n  doQuickSort(array, pivotCurrentIndex + 1, end, auxiliaryRes);\n}\n","import React from \"react\";\nimport \"./Toolbar.css\";\n\nfunction Toolbar({\n  array,\n  size,\n  isSortRunning,\n  speed,\n  generateNewArray,\n  setSortingActive,\n  setSortingInActive,\n  bubbleSort,\n  insertionSort,\n  mergeSort,\n  quickSort,\n  changeArraySize,\n  changeSortingSpeed,\n}) {\n  const [sortingProperties, setSortingProperties] = React.useState({\n    size: size,\n    speed: speed,\n  });\n\n  function handleInputChange(event) {\n    setSortingProperties((prev) => ({\n      ...prev,\n      ...{\n        [event.target.name]: event.target.value,\n      },\n    }));\n  }\n\n  async function handleButtonClick(event) {\n    setSortingActive();\n    let sortingAlgorithm = event.target.name;\n    switch (sortingAlgorithm) {\n      case \"bubbleSort\":\n        await bubbleSort(array, sortingProperties.speed);\n        break;\n      case \"insertionSort\":\n        await insertionSort(array, sortingProperties.speed);\n        break;\n      case \"mergeSort\":\n        await mergeSort(array, sortingProperties.speed);\n        break;\n      case \"quickSort\":\n        await quickSort(array, sortingProperties.speed);\n        break;\n      default:\n        return;\n    }\n    setSortingInActive();\n  }\n\n  React.useEffect(() => {\n    changeArraySize(sortingProperties.size);\n  }, [changeArraySize, sortingProperties.size]);\n\n  React.useEffect(() => {\n    changeSortingSpeed(sortingProperties.speed);\n  }, [changeSortingSpeed, sortingProperties.speed]);\n\n  return (\n    <div className=\"toolbarContainer\">\n      <div className=\"toolbarArrayGeneration\">\n        <div className=\"toolbarGenerateNewArray\">\n          <button\n            className=\"btn btn-primary toolbarButton toolbarGenerateArrayButton\"\n            disabled={isSortRunning}\n            onClick={() => generateNewArray(sortingProperties.size)}\n          >\n            Generate new array\n          </button>\n        </div>\n        <form className=\"toolbarForm\">\n          <label className=\"toolbarPropertiesRange\">Array's size</label>\n          <input\n            className=\"form-range toolbarArrayProperties\"\n            type=\"range\"\n            name=\"size\"\n            min=\"3\"\n            max=\"100\"\n            step=\"5\"\n            value={sortingProperties.size}\n            disabled={isSortRunning}\n            onChange={handleInputChange}\n          ></input>\n          <label className=\"toolbarPropertiesRange\">Sorting speed</label>\n          <input\n            className=\"form-range toolbarArrayProperties\"\n            type=\"range\"\n            name=\"speed\"\n            min=\"2\"\n            max=\"80\"\n            step=\"1\"\n            value={sortingProperties.speed}\n            disabled={isSortRunning}\n            onChange={handleInputChange}\n          ></input>\n        </form>\n      </div>\n      <div className=\"toolbarSortingAlgorithms\">\n        <button\n          className=\"btn btn-secondary toolbarButton\"\n          name=\"bubbleSort\"\n          disabled={isSortRunning}\n          onClick={handleButtonClick}\n        >\n          Bubble Sort\n        </button>\n        <button\n          className=\"btn btn-secondary toolbarButton\"\n          name=\"insertionSort\"\n          disabled={isSortRunning}\n          onClick={handleButtonClick}\n        >\n          Insertion Sort\n        </button>\n        <button\n          className=\"btn btn-secondary toolbarButton\"\n          name=\"mergeSort\"\n          disabled={isSortRunning}\n          onClick={handleButtonClick}\n        >\n          MergeSort\n        </button>\n        <button\n          className=\"btn btn-secondary toolbarButton\"\n          name=\"quickSort\"\n          disabled={isSortRunning}\n          onClick={handleButtonClick}\n        >\n          QuickSort\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Toolbar;\n","import { connect } from \"react-redux\";\nimport {\n  changeArraySize,\n  changeSortingSpeed,\n  generateNewArray,\n  setSortingActive,\n  setSortingInActive,\n} from \"redux/actions/actions\";\nimport { bubbleSort } from \"algorithms/bubbleSort\";\nimport { insertionSort } from \"algorithms/insertionSort\";\nimport { mergeSort } from \"algorithms/mergeSort\";\nimport { quickSort } from \"algorithms/quickSort\";\nimport Toolbar from \"./Toolbar\";\n\nconst mapStateToProps = (state) => {\n  return {\n    array: state.arrayProperties.array,\n    size: state.arrayProperties.size,\n    isSortRunning: state.arrayProperties.isSortRunning,\n    speed: state.speedProperties.speed,\n  };\n};\n\nconst mapDispatchToProps = () => (dispatch) => ({\n  generateNewArray: (size) => {\n    dispatch(generateNewArray(size));\n  },\n  changeArraySize: (size) => {\n    dispatch(changeArraySize(size));\n  },\n  changeSortingSpeed: (speed) => {\n    dispatch(changeSortingSpeed(speed));\n  },\n  setSortingActive: () => {\n    dispatch(setSortingActive());\n  },\n  setSortingInActive: () => {\n    dispatch(setSortingInActive());\n  },\n  bubbleSort: async (array, speed) => {\n    await bubbleSort(dispatch, array, speed);\n  },\n  insertionSort: async (array, speed) => {\n    await insertionSort(dispatch, array, speed);\n  },\n  mergeSort: async (array, speed) => {\n    await mergeSort(dispatch, array, speed);\n  },\n  quickSort: async (array, speed) => {\n    await quickSort(dispatch, array, speed);\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Toolbar);\n","import React from \"react\";\nimport \"./Footer.css\";\n\nfunction Footer() {\n  return <p className=\"footerAuthor\">&copy; Alexander Nikolaev, 2021</p>;\n}\n\nexport default Footer;\n","import React from \"react\";\n\nimport ArrayContainer from \"../Array/ArrayContainer\";\nimport ToolbarContainer from \"../Toolbar/ToolbarContainer\";\nimport Footer from \"components/Footer/Footer\";\n\nfunction App() {\n  return (\n    <div>\n      <ToolbarContainer />\n      <ArrayContainer />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import {\n  CHANGE_ARRAY_SIZE,\n  SET_NEW_ARRAY,\n  GENERATE_NEW_ARRAY,\n  SET_SORTING_ACTIVE,\n  SET_SORTING_INACTIVE,\n} from \"redux/types/types\";\nimport {\n  DEFAULT_RANGE_MAX,\n  DEFAULT_RANGE_MIN,\n  DEFAULT_SIZE,\n} from \"utils/constants\";\nimport { getRandomIntInclusive } from \"utils/utils\";\n\nconst initialState = {\n  array: Array.from({ length: DEFAULT_SIZE }, () => {\n    return {\n      val: getRandomIntInclusive(DEFAULT_RANGE_MIN, DEFAULT_RANGE_MAX),\n      status: \"columnNotSorted\",\n    };\n  }),\n  size: DEFAULT_SIZE,\n  isSortRunning: false,\n};\n\nexport const arrayReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GENERATE_NEW_ARRAY:\n      return {\n        ...state,\n        array: Array.from({ length: action.payload }, () => {\n          return {\n            val: getRandomIntInclusive(DEFAULT_RANGE_MIN, DEFAULT_RANGE_MAX),\n            status: \"columnNotSorted\",\n          };\n        }),\n      };\n    case SET_NEW_ARRAY:\n      return {\n        ...state,\n        array: action.payload,\n      };\n    case CHANGE_ARRAY_SIZE:\n      return {\n        ...state,\n        array: Array.from({ length: action.payload }, () => {\n          return {\n            val: getRandomIntInclusive(DEFAULT_RANGE_MIN, DEFAULT_RANGE_MAX),\n            status: \"columnNotSorted\",\n          };\n        }),\n      };\n    case SET_SORTING_ACTIVE:\n      return {\n        ...state,\n        isSortRunning: true,\n      };\n    case SET_SORTING_INACTIVE:\n      return {\n        ...state,\n        isSortRunning: false,\n      };\n    default:\n      return state;\n  }\n};\n","import { CHANGE_SORTING_SPEED } from \"redux/types/types\";\nimport { DEFAULT_SPEED } from \"utils/constants\";\n\nconst initialState = {\n  speed: DEFAULT_SPEED,\n};\n\nexport const speedReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CHANGE_SORTING_SPEED:\n      return {\n        ...state,\n        speed: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { arrayReducer } from \"./arrayReducer/arrayReducer\";\nimport { speedReducer } from \"./speedReducer/speedReducer\";\n\nexport default combineReducers({\n  arrayProperties: arrayReducer,\n  speedProperties: speedReducer,\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport App from \"./components/App/App\";\nimport rootReducer from \"./redux/reducers/rootReducer\";\nimport \"./index.css\";\n\nconst composedEnhancer = composeWithDevTools({ trace: true });\nconst store = createStore(\n  rootReducer,\n  composedEnhancer(applyMiddleware(thunk))\n);\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(\n  <React.StrictMode>{app}</React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}